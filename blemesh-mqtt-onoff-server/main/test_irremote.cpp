#include <stdio.h>
#include <stdlib.h>
#include "IRremote.h"

// Define which GPIO pin will be used for IR transmission
#define IR_SEND_PIN 4  
// Define UART number for serial communication
#define UART_NUM UART_NUM_0
// Define buffer size for serial communication
#define BUF_SIZE 256

// Raw IR code array for turning ON the air conditioner
// Format: Pairs of duration (in microseconds) for mark and space
uint16_t irOn[] = {3400, 1700, 400, 1250, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 450, 400, 400, 450, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 1250, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 400, 1250, 450, 1250, 450};

// Raw IR code array for turning OFF the air conditioner
uint16_t irOff[] = {3350, 1700, 450, 1250, 450, 1200, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 400, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 1200, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 400, 400, 450, 400, 400, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 500, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 1250, 450, 400, 450, 1250, 450, 400, 450, 1200, 450};

/**
 * IR Setup function to initialize the IR transmitter
 * This function uses a static flag to ensure it only runs once
 */
void setupIRTest() {
    static bool initialized = false;  // Static flag to prevent multiple initializations
    
    if (!initialized) {
        printf("\nIR Transmitter Ready.\n");
        initialized = true;
        
        // Initialize the IR sender with the specified pin
        IrSender.begin(IR_SEND_PIN);
    }
}

/**
 * Sends IR signal to control the air conditioner
 * 
 * @param state - 1 to turn ON the air conditioner, 0 to turn it OFF
 */
void send_IR_signal(uint8_t state) {
    if (state == 1) {
        // Send the ON signal at 38kHz carrier frequency
        IrSender.sendRaw(irOn, sizeof(irOn) / sizeof(irOn[0]), 38);
        printf("\nSending Aircon ON Signal...\n");
    }
    else {
        // Send the OFF signal at 38kHz carrier frequency
        IrSender.sendRaw(irOff, sizeof(irOff) / sizeof(irOff[0]), 38);
        printf("\nSending Aircon OFF Signal...\n");
    }
}