#include <stdio.h>
#include <stdlib.h>
#include "IRremote.h"

#define IR_SEND_PIN 4  // Define your IR send GPIO
#define UART_NUM UART_NUM_0  // Use UART0 for serial communication
#define BUF_SIZE 256

uint16_t irOn[] = {3400, 1700, 400, 1250, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 450, 400, 400, 450, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 1250, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 400, 1250, 450, 1250, 450};  // Example ON signal
uint16_t irOff[] = {3350, 1700, 450, 1250, 450, 1200, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 1250, 450, 1250, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 400, 450, 1250, 450, 400, 450, 400, 400, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 1200, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 1250, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1200, 450, 1250, 450, 400, 450, 1250, 450, 1250, 450, 400, 450, 350, 450, 1250, 450, 1250, 450, 400, 450, 400, 400, 450, 400, 400, 450, 1250, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 350, 500, 350, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 400, 400, 400, 450, 400, 450, 400, 450, 400, 450, 400, 450, 1250, 450, 400, 400, 400, 450, 1250, 450, 400, 450, 1250, 450, 400, 450, 1200, 450};

// **IR Setup - Ensure this runs only ONCE**
void setupIRTest() {
    static bool initialized = false;  // Prevent multiple initializations

    if (!initialized) {
        printf("\nIR Transmitter Ready.\n");
        initialized = true;

        // Initialize IR sender **only once**
        IrSender.begin(IR_SEND_PIN);
    }
}

// Sends IR signal based on user input
void send_IR_signal(uint8_t state) {
    if (state == 1) {
        IrSender.sendRaw(irOn, sizeof(irOn) / sizeof(irOn[0]), 38);
        printf("\nSending Aircon ON Signal...\n");
    }
    else {
        IrSender.sendRaw(irOff, sizeof(irOff) / sizeof(irOff[0]), 38);
        printf("\nSending Aircon OFF Signal...\n");
    }
}